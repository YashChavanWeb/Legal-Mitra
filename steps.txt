### Steps to run

- frontend - npm run dev
- backend - npm run dev
- python - uvicorn pdf_chat_rag:app --reload

and you are done  :)






























Steps for Translation Logic

/summarize
- take a random article and summarize its content
- it is a standalone file and uses hugging face to summarize

/legal-advice
- it has a search bar which has a translate button, that translates the typed text in desired language (should be done in backend)
- also we get the response of all the related articles from all the collections
- for running this run the frontend, python keyword_extraction_and_api.py , translate_to_english_query.py

chat_component.py
- here we are targeting the vector_embeddings folder and getting responses 
- this is what we have to convert to react component for getting the answer as response
- to run this we go to python venv and - streamlit run chat_component.py


# the flow
- search in legal-advice -> chat_component.py response as answer -> summarize for summarizing the response and showing on legal-advice back


/response
- here i made the component to get the chat_component functionality to frontend - pdf_response.py added the fastapi to it
- for this run uvicorn pdf_response:app --reload under venv




# Files
rag_pdf_chat - uvicorn
pdf_response - uvicorn
keyword_extraction_and_api - python
news - python
translate_to_english_query- python



